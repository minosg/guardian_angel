syntax = "proto3";
package node_messages;

/* Internal Node Message used by modules/peripherals */

message NodeMessage {
    string device_name       = 1;    // device name
    int32 device_id          = 2;    // device id
    uint32 sequence          = 3;    // message sequence
    uint32 time              = 4;    // message time
    uint32 msg_type          = 5;    // message type
    repeated Service payload = 6;    // Sensor payload
}

message Service {
  string name = 1;            // Service name
  string msg = 2;             // Message conveyed
  bytes payload = 3;          // Raw payload
  uint32 crc = 4;             // Payload CRC
  uint32 payload_id = 5;      // Payload unique id, for data uploaded indirectly
                              // like file copy, move
}

/* External Node Message used by NodeClient <-> NodeServer communications */

message ULinkMessage {
    MetaData metadata = 1;               // Messages metadata
    Location location = 2;               // Geographic location information
    Control control = 3;                 // Control Payload
    repeated NodeMessage peripheral = 4; // Sensor Payload

}

message MetaData {
    uint32 message_type = 1;            // Message type Preamble, Full, Control
    uint32 device_id = 2;               // Client Identifier
    uint32 network_id = 3;              // Network Identifier
    uint32 app_id = 4;                  // Application Identifier
    uint32 time = 5;                    // Message Composition time
    uint32 sequence = 6;                // Message Sequence
    uint32 periph_count = 7;            // Number of sensor data included in the message
    string device_name = 8;             // Human Readable device name
}

message Control {
    uint32 key = 1;                     // Command access key (authentication)
    bool is_indexed = 2;                // Compressed command indicator
    uint32 cmd_index = 3;               // Command index for lookup type resolution
    repeated uint32 cmd_par = 4;        // Command parameters for lookup type res
    string cmd = 5;                     // Command in raw string form
    repeated string params = 6;         // Command Parameters
}

message Location {
    float lat = 1;                  // Latitude
    float long = 2;                 // longitude
    string street = 3;              // Street name
    string building = 4;            // Building name
    string floor = 5;               // Floor
    string room = 6;                // Room
    string city = 7;                // City
    string country = 8;             // Country
    string postcode = 9;            // postcode
}
